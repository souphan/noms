import * as tslib_1 from "tslib";
import { LazyGetter } from 'typescript-lazy-get-decorator';
import { addToStringTag } from '../util/addToStringTag';
/** @internal */
export class CachedItemImpl {
    constructor(data, expiryTime) {
        this.data = data;
        this.expires = new Date(typeof expiryTime === 'number' ? expiryTime : 0);
    }
    get expired() {
        return this.expiresIn === 0;
    }
    get expiresIn() {
        return Math.max(0, this.expires.getTime() - Date.now());
    }
    get hasData() {
        return this.data !== null;
    }
    toJSON() {
        return {
            data: this.data,
            expired: this.expired,
            expires: this.expires,
            expiresIn: this.expiresIn,
            hasData: this.hasData
        };
    }
}
tslib_1.__decorate([
    LazyGetter(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [])
], CachedItemImpl.prototype, "expired", null);
tslib_1.__decorate([
    LazyGetter(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [])
], CachedItemImpl.prototype, "expiresIn", null);
tslib_1.__decorate([
    LazyGetter(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [])
], CachedItemImpl.prototype, "hasData", null);
addToStringTag(CachedItemImpl, 'CachedItem');
