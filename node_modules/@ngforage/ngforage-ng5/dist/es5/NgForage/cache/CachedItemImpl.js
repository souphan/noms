Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var typescript_lazy_get_decorator_1 = require("typescript-lazy-get-decorator");
var addToStringTag_1 = require("../util/addToStringTag");
/** @internal */
var CachedItemImpl = (function () {
    function CachedItemImpl(data, expiryTime) {
        this.data = data;
        this.expires = new Date(typeof expiryTime === 'number' ? expiryTime : 0);
    }
    Object.defineProperty(CachedItemImpl.prototype, "expired", {
        get: function () {
            return this.expiresIn === 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CachedItemImpl.prototype, "expiresIn", {
        get: function () {
            return Math.max(0, this.expires.getTime() - Date.now());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CachedItemImpl.prototype, "hasData", {
        get: function () {
            return this.data !== null;
        },
        enumerable: true,
        configurable: true
    });
    CachedItemImpl.prototype.toJSON = function () {
        return {
            data: this.data,
            expired: this.expired,
            expires: this.expires,
            expiresIn: this.expiresIn,
            hasData: this.hasData
        };
    };
    tslib_1.__decorate([
        typescript_lazy_get_decorator_1.LazyGetter(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [])
    ], CachedItemImpl.prototype, "expired", null);
    tslib_1.__decorate([
        typescript_lazy_get_decorator_1.LazyGetter(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [])
    ], CachedItemImpl.prototype, "expiresIn", null);
    tslib_1.__decorate([
        typescript_lazy_get_decorator_1.LazyGetter(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [])
    ], CachedItemImpl.prototype, "hasData", null);
    return CachedItemImpl;
}());
exports.CachedItemImpl = CachedItemImpl;
addToStringTag_1.addToStringTag(CachedItemImpl, 'CachedItem');
