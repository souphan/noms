{"remainingRequest":"/Users/souphan/Library/Mobile Documents/com~apple~CloudDocs/nomfoods/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/souphan/Library/Mobile Documents/com~apple~CloudDocs/nomfoods/node_modules/@angular/material/esm5/stepper.es5.js","dependencies":[{"path":"/Users/souphan/Library/Mobile Documents/com~apple~CloudDocs/nomfoods/node_modules/@angular/material/esm5/stepper.es5.js","mtime":1507246791000},{"path":"/Users/souphan/Library/Mobile Documents/com~apple~CloudDocs/nomfoods/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/souphan/Library/Mobile Documents/com~apple~CloudDocs/nomfoods/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1518048966000}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** PURE_IMPORTS_START _angular_cdk_a11y,_angular_cdk_portal,_angular_cdk_stepper,_angular_common,_angular_core,_angular_material_button,_angular_material_core,_angular_material_icon,_angular_cdk_coercion,tslib,tslib,rxjs_Subject,_angular_animations PURE_IMPORTS_END */\nimport { A11yModule, FocusMonitor } from '@angular/cdk/a11y';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CdkStep, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious } from '@angular/cdk/stepper';\nimport { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, Directive, ElementRef, Inject, Injectable, Input, NgModule, Renderer2, SkipSelf, TemplateRef, ViewChildren, ViewEncapsulation, forwardRef } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { __extends } from 'tslib';\nimport { Subject } from 'rxjs/Subject';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nvar _MatStepLabel = CdkStepLabel;\nvar MatStepLabel = /*@__PURE__*/ (function (_super) {\n    __extends(MatStepLabel, _super);\n    /**\n     * @param {?} template\n     */\n    function MatStepLabel(template) {\n        return _super.call(this, template) || this;\n    }\n    return MatStepLabel;\n}(_MatStepLabel));\n/**\n * Stepper data that is required for internationalization.\n */\nvar MatStepperIntl = /*@__PURE__*/ (function () {\n    function MatStepperIntl() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * Label that is rendered below optional steps.\n         */\n        this.optionalLabel = 'Optional';\n    }\n    return MatStepperIntl;\n}());\nvar MatStepHeader = /*@__PURE__*/ (function () {\n    /**\n     * @param {?} _intl\n     * @param {?} _focusMonitor\n     * @param {?} _element\n     * @param {?} renderer\n     * @param {?} changeDetectorRef\n     */\n    function MatStepHeader(_intl, _focusMonitor, _element, renderer, changeDetectorRef) {\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        this._element = _element;\n        _focusMonitor.monitor(_element.nativeElement, renderer, true);\n        this._intlSubscription = _intl.changes.subscribe(function () { return changeDetectorRef.markForCheck(); });\n    }\n    Object.defineProperty(MatStepHeader.prototype, \"index\", {\n        /**\n         * Index of the given step.\n         * @return {?}\n         */\n        get: function () { return this._index; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._index = coerceNumberProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatStepHeader.prototype, \"selected\", {\n        /**\n         * Whether the given step is selected.\n         * @return {?}\n         */\n        get: function () { return this._selected; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._selected = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatStepHeader.prototype, \"active\", {\n        /**\n         * Whether the given step label is active.\n         * @return {?}\n         */\n        get: function () { return this._active; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._active = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatStepHeader.prototype, \"optional\", {\n        /**\n         * Whether the given step is optional.\n         * @return {?}\n         */\n        get: function () { return this._optional; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._optional = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatStepHeader.prototype.ngOnDestroy = function () {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element.nativeElement);\n    };\n    /**\n     * Returns string label of given step if it is a text label.\n     * @return {?}\n     */\n    MatStepHeader.prototype._stringLabel = function () {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    };\n    /**\n     * Returns MatStepLabel if the label of given step is a template label.\n     * @return {?}\n     */\n    MatStepHeader.prototype._templateLabel = function () {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    };\n    /**\n     * Returns the host HTML element.\n     * @return {?}\n     */\n    MatStepHeader.prototype._getHostElement = function () {\n        return this._element.nativeElement;\n    };\n    return MatStepHeader;\n}());\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nvar _MatStep = CdkStep;\nvar _MatStepper = CdkStepper;\nvar MatStep = /*@__PURE__*/ (function (_super) {\n    __extends(MatStep, _super);\n    /**\n     * @param {?} stepper\n     * @param {?} _errorStateMatcher\n     */\n    function MatStep(stepper, _errorStateMatcher) {\n        var _this = _super.call(this, stepper) || this;\n        _this._errorStateMatcher = _errorStateMatcher;\n        return _this;\n    }\n    /**\n     * Custom error state matcher that additionally checks for validity of interacted form.\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    MatStep.prototype.isErrorState = function (control, form) {\n        var /** @type {?} */ originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        var /** @type {?} */ customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    };\n    return MatStep;\n}(_MatStep));\nvar MatStepper = /*@__PURE__*/ (function (_super) {\n    __extends(MatStepper, _super);\n    function MatStepper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatStepper;\n}(_MatStepper));\nvar MatHorizontalStepper = /*@__PURE__*/ (function (_super) {\n    __extends(MatHorizontalStepper, _super);\n    function MatHorizontalStepper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatHorizontalStepper;\n}(MatStepper));\nvar MatVerticalStepper = /*@__PURE__*/ (function (_super) {\n    __extends(MatVerticalStepper, _super);\n    function MatVerticalStepper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatVerticalStepper;\n}(MatStepper));\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nvar _MatStepperNext = CdkStepperNext;\nvar _MatStepperPrevious = CdkStepperPrevious;\n/**\n * Button that moves to the next step in a stepper workflow.\n */\nvar MatStepperNext = /*@__PURE__*/ (function (_super) {\n    __extends(MatStepperNext, _super);\n    function MatStepperNext() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatStepperNext;\n}(_MatStepperNext));\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\nvar MatStepperPrevious = /*@__PURE__*/ (function (_super) {\n    __extends(MatStepperPrevious, _super);\n    function MatStepperPrevious() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatStepperPrevious;\n}(_MatStepperPrevious));\nvar MatStepperModule = /*@__PURE__*/ (function () {\n    function MatStepperModule() {\n    }\n    return MatStepperModule;\n}());\n/**\n * Generated bundle index. Do not edit.\n */\nexport { MatStepperModule, _MatStepLabel, MatStepLabel, _MatStep, _MatStepper, MatStep, MatStepper, MatHorizontalStepper, MatVerticalStepper, _MatStepperNext, _MatStepperPrevious, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIntl };\n//# sourceMappingURL=stepper.es5.js.map\n",null]}