{"remainingRequest":"/Users/souphan/Library/Mobile Documents/com~apple~CloudDocs/nomfoods/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/souphan/Library/Mobile Documents/com~apple~CloudDocs/nomfoods/node_modules/@angular/cdk/esm5/coercion.es5.js","dependencies":[{"path":"/Users/souphan/Library/Mobile Documents/com~apple~CloudDocs/nomfoods/node_modules/@angular/cdk/esm5/coercion.es5.js","mtime":1507246701000},{"path":"/Users/souphan/Library/Mobile Documents/com~apple~CloudDocs/nomfoods/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/souphan/Library/Mobile Documents/com~apple~CloudDocs/nomfoods/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1518048966000}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces a data-bound value (typically a string) to a boolean.\n * @param {?} value\n * @return {?}\n */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction coerceBooleanProperty(value) {\n    return value != null && \"\" + value !== 'false';\n}\n/**\n * Coerces a data-bound value (typically a string) to a number.\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nfunction coerceNumberProperty(value, fallbackValue) {\n    if (fallbackValue === void 0) {\n        fallbackValue = 0;\n    }\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return isNaN(parseFloat(/** @type {?} */ (value))) || isNaN(Number(value)) ? fallbackValue : Number(value);\n}\n/**\n * Wraps the provided value in an array, unless the provided value is an array.\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n/**\n * Generated bundle index. Do not edit.\n */\nexport { coerceBooleanProperty, coerceNumberProperty, coerceArray };\n//# sourceMappingURL=coercion.es5.js.map\n",null]}